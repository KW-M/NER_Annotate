{"version":3,"sources":["Toast.jsx","NER_Visualizer.jsx","NER_Annotator.jsx","index.js"],"names":["Toast","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","classes","concat","level","react_default","a","createElement","className","message","nextProps","setState","React","Component","NERVisualizer","generateHTML","text","spans","output","offset","_loop","spanIndex","_spans$spanIndex","label","start","end","toUpperCase","entity","slice","fragments","split","forEach","fragment","i","push","length","color","intToHSL","hashCode","cancelSpanClick","data-entity","style","background","onClick","e","cycleSpanLabel","deleteSpan","str","hash","charCodeAt","NERAnnotator","lastUsedEntity","_this2","id","onMouseUp","handleMouseUp","NER_Visualizer","avalableEntities","bind","splice","updateSpans","newLabel","indexOf","_this3","setTimeout","selection","getSelectionRange","_this3$findSpansOverl","findSpansOverlapingSelection","console","log","span","windowSelection","window","getSelection","rangeCount","startRange","getRangeAt","endRange","charcounter","document","getElementById","childNodes","element","startContainer","parentNode","startOffset","endContainer","nodeName","nodeType","hasAttribute","textContent","endOffset","removeAllRanges","App","currentlyFetching","currentExampleHistoryIndex","exampleHistory","visibleToastObj","fetchAvalableEntities","showNextExample","addEventListener","handleKeyPress","removeEventListener","event","key","showPrevExample","ctrlKey","metaKey","undo","currentExample","undoHistory","pop","firstRun","saveAnnotations","fetchNextExample","then","obj","NER_Annotate_Message","alert","ents","newExampleHistory","fetch","response","json","example","showToast","myJson","array","newSpans","loadingElm","undefined","currentUndo","NER_Annotator","src_Toast","durration","_this4","rootElement","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.734b8509.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Toast_Styles.css\";\n\nclass Toast extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvisible: false\n\t\t};\n\t}\n\n\trender() {\n\t\tlet classes = `toast ${this.props.level} `;\n\t\tclasses += this.state.visible ? \"visible\" : \"\";\n\t\treturn (\n\t\t\t<div className={classes}>\n\t\t\t\t<p>{this.props.message}</p>\n\t\t\t</div>\n\t\t);\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.visible !== nextProps.visible) {\n\t\t\tthis.setState({\n\t\t\t\tvisible: nextProps.visible\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default Toast;\n","import React from \"react\";\n\nimport \"./NER_Annotate_Styles.css\";\n\nclass NERVisualizer extends React.Component {\n\trender() {\n\t\treturn this.generateHTML(this.props.text, this.props.spans);\n\t}\n\n\tgenerateHTML(text, spans) {\n\t\tlet output = [];\n\t\tlet offset = 0;\n\n\t\tfor (let spanIndex = 0; spanIndex < spans.length; spanIndex++) {\n\t\t\tlet { label, start, end } = spans[spanIndex];\n\t\t\tlabel = label.toUpperCase();\n\t\t\tconst entity = text.slice(start, end);\n\t\t\tconst fragments = text.slice(offset, start).split(\"\\n\");\n\t\t\tfragments.forEach((fragment, i) => {\n\t\t\t\toutput.push(fragment);\n\t\t\t\tif (fragments.length > 1 && i !== fragments.length - 1) output.push(<br />);\n\t\t\t});\n\t\t\tlet color = this.intToHSL(this.hashCode(label));\n\t\t\tlet cancelSpanClick = false;\n\t\t\toutput.push(\n\t\t\t\t<span\n\t\t\t\t\tdata-entity={label}\n\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tif (cancelSpanClick) {\n\t\t\t\t\t\t\tcancelSpanClick = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.props.cycleSpanLabel(spanIndex);\n\t\t\t\t\t}}>\n\t\t\t\t\t{entity}\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tcancelSpanClick = true;\n\t\t\t\t\t\t\t// e.preventDefault();\n\t\t\t\t\t\t\t// e.nativeEvent.stopImmediatePropagation();\n\t\t\t\t\t\t\tthis.props.deleteSpan(spanIndex);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tx\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t);\n\t\t\toffset = end;\n\t\t}\n\t\tconst fragments = text.slice(offset, text.length).split(\"\\n\");\n\t\tfragments.forEach((fragment, i) => {\n\t\t\toutput.push(fragment);\n\t\t\tif (fragments.length > 1 && i !== fragments.length - 1) output.push(<br />);\n\t\t});\n\t\treturn output;\n\t}\n\n\thashCode(str) {\n\t\t// java String#hashCode\n\t\tvar hash = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash);\n\t\t}\n\t\treturn hash - 100 * str.length;\n\t}\n\n\tintToHSL(i) {\n\t\treturn \"hsla(\" + ((i - 400) % 360) + \", 90%, 65%, 1)\";\n\t}\n}\n\nexport default NERVisualizer;\n","import React from \"react\";\nimport NERVisualizer from \"./NER_Visualizer\";\n\nclass NERAnnotator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.lastUsedEntity = null;\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<figure\n\t\t\t\tid=\"ner_visualizer_container\"\n\t\t\t\tonMouseUp={(e) => {\n\t\t\t\t\tthis.handleMouseUp(e);\n\t\t\t\t}}>\n\t\t\t\t<NERVisualizer\n\t\t\t\t\ttext={this.props.text}\n\t\t\t\t\tavalableEntities={this.props.avalableEntities}\n\t\t\t\t\tspans={this.props.spans}\n\t\t\t\t\tdeleteSpan={this.deleteSpan.bind(this)}\n\t\t\t\t\tcycleSpanLabel={this.cycleSpanLabel.bind(this)}\n\t\t\t\t/>\n\t\t\t</figure>\n\t\t);\n\t}\n\n\tdeleteSpan(spanIndex) {\n\t\tconst spans = this.props.spans.slice();\n\t\tspans.splice(spanIndex, 1);\n\t\tthis.props.updateSpans(spans);\n\t}\n\n\tcycleSpanLabel(spanIndex) {\n\t\tconst spans = this.props.spans.slice();\n\t\tconst avalableEntities = this.props.avalableEntities;\n\n\t\tconst newLabel =\n\t\t\tavalableEntities[(avalableEntities.indexOf(spans[spanIndex].label) + 1) % avalableEntities.length] ||\n\t\t\t\"No avalable Entities provided\";\n\t\tthis.lastUsedEntity = newLabel;\n\n\t\tspans[spanIndex] = {\n\t\t\tstart: spans[spanIndex].start,\n\t\t\tend: spans[spanIndex].end,\n\t\t\tlabel: newLabel\n\t\t};\n\t\tthis.props.updateSpans(spans);\n\t}\n\n\thandleMouseUp(e) {\n\t\tsetTimeout(() => {\n\t\t\tvar spans = this.props.spans.slice();\n\t\t\tvar selection = this.getSelectionRange();\n\n\t\t\tif (selection.start === selection.end) return false;\n\n\t\t\tvar { spans, selection } = this.findSpansOverlapingSelection(spans, selection);\n\t\t\tconsole.log(\"selection: \" + this.props.text.slice(selection.start, selection.end), selection);\n\n\t\t\tselection[\"label\"] = this.lastUsedEntity || this.props.avalableEntities[0] || \"No avalable Entities provided\";\n\t\t\tconsole.log(spans, selection);\n\n\t\t\tlet spanIndex = 0;\n\t\t\twhile (spans[spanIndex] && spans[spanIndex].end < selection.start) spanIndex++;\n\t\t\tif (spanIndex >= spans.length) spans.push(selection);\n\t\t\telse spans.splice(spanIndex, 0, selection);\n\n\t\t\tthis.props.updateSpans(spans);\n\t\t}, 500);\n\t}\n\n\tfindSpansOverlapingSelection(spans, selection) {\n\t\tfor (let spanIndex = 0; spanIndex < spans.length; spanIndex++) {\n\t\t\tlet span = spans[spanIndex];\n\t\t\tif (\n\t\t\t\tselection.start <= span.end &&\n\t\t\t\tspan.end <= selection.end &&\n\t\t\t\t(selection.start <= span.start && span.start <= selection.end)\n\t\t\t) {\n\t\t\t\tconsole.log(\"splicing\", spans[spanIndex]);\n\t\t\t\tspans.splice(spanIndex, 1);\n\t\t\t\tspanIndex--;\n\t\t\t} else if (selection.start <= span.start && span.start <= selection.end) {\n\t\t\t\tconsole.log(\"trimming end to: \" + (span.end + 1), spans[spanIndex]);\n\t\t\t\tselection.end = span.start;\n\t\t\t} else if (selection.start <= span.end && span.end <= selection.end) {\n\t\t\t\tconsole.log(\"trimming start to: \" + (span.end + 1), spans[spanIndex]);\n\t\t\t\tselection.start = span.end;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"not splicing\", spans[spanIndex]);\n\t\t\t}\n\t\t}\n\t\treturn { spans: spans, selection: selection };\n\t}\n\n\tgetSelectionRange() {\n\t\tlet windowSelection = window.getSelection();\n\t\tif (windowSelection.rangeCount === 0) return { start: 0, end: 0 };\n\t\tlet startRange = windowSelection.getRangeAt(0);\n\t\tconsole.log(startRange);\n\t\tlet endRange = windowSelection.getRangeAt(windowSelection.rangeCount - 1);\n\t\tconsole.log(endRange);\n\t\tlet start = 0;\n\t\tlet end = 0;\n\t\tlet charcounter = 0;\n\n\t\tdocument.getElementById(\"ner_visualizer_container\").childNodes.forEach((element) => {\n\t\t\t// console.dir(element);\n\t\t\tif (element === startRange.startContainer || element === startRange.startContainer.parentNode) {\n\t\t\t\tstart = charcounter + startRange.startOffset;\n\t\t\t}\n\t\t\tif (element === endRange.endContainer || element === endRange.endContainer.parentNode) {\n\t\t\t\tend = charcounter + endRange.endOffset;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (element.nodeName === \"BR\") {\n\t\t\t\tcharcounter += 1;\n\t\t\t\tconsole.log(\"here\");\n\t\t\t} else if (element.nodeType === 1 && element.hasAttribute(\"data-entity\")) {\n\t\t\t\tcharcounter -= 1;\n\t\t\t}\n\t\t\tcharcounter += element.textContent.length;\n\t\t});\n\t\twindowSelection.removeAllRanges();\n\t\treturn { start: start, end: end };\n\t}\n}\n\nexport default NERAnnotator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Toast from \"./Toast\";\nimport NERAnnotator from \"./NER_Annotator\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Don't call this.setState() here!\n\t\tthis.state = {\n\t\t\tcurrentlyFetching: false,\n\t\t\tavalableEntities: [],\n\t\t\tcurrentExampleHistoryIndex: 0,\n\t\t\texampleHistory: [],\n\t\t\tvisibleToastObj: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchAvalableEntities();\n\t\tthis.showNextExample();\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress.bind(this), false);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyPress.bind(this), false);\n\t}\n\n\thandleKeyPress(event) {\n\t\tconsole.log(event);\n\t\tthis.setState({ visibleToastObj: null });\n\t\tif (event.key === \"ArrowRight\") {\n\t\t\tthis.showNextExample();\n\t\t} else if (event.key === \"ArrowLeft\") {\n\t\t\tthis.showPrevExample();\n\t\t} else if (event.key === \"z\" && (event.ctrlKey === true || event.metaKey === true)) {\n\t\t\tthis.undo();\n\t\t}\n\t}\n\n\tundo() {\n\t\tconst exampleHistory = this.state.exampleHistory;\n\t\tconst exampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tconst currentExample = exampleHistory[exampleHistoryIndex];\n\n\t\tif (currentExample.undoHistory.length <= 1) return false;\n\n\t\tcurrentExample.undoHistory.pop();\n\n\t\tthis.setState({ exampleHistory: exampleHistory });\n\t}\n\n\tshowPrevExample() {\n\t\tconst currentExampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tif (currentExampleHistoryIndex > 0) this.setState({ currentExampleHistoryIndex: currentExampleHistoryIndex - 1 });\n\t}\n\n\tshowNextExample(firstRun) {\n\t\tif (this.state.currentlyFetching === true) return;\n\t\tconst exampleHistory = this.state.exampleHistory;\n\t\tconst currentExampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tif (firstRun != true) this.saveAnnotations(exampleHistory[currentExampleHistoryIndex]);\n\t\tif (currentExampleHistoryIndex < exampleHistory.length - 1) {\n\t\t\tthis.setState({ currentExampleHistoryIndex: currentExampleHistoryIndex + 1 });\n\t\t} else {\n\t\t\tthis.setState({ currentlyFetching: true });\n\t\t\tthis.fetchNextExample().then((obj) => {\n\t\t\t\tconsole.log(obj);\n\t\t\t\tif (obj.NER_Annotate_Message === \"No More Examples\") {\n\t\t\t\t\talert(\"All done - No more examples left to annotate.\\nEverything is saved. You can close this page now.\");\n\t\t\t\t\tthis.setState({ currentlyFetching: false });\n\t\t\t\t} else {\n\t\t\t\t\tobj.undoHistory = [{ spans: obj.ents }];\n\t\t\t\t\tdelete obj.ents;\n\t\t\t\t\tconst newExampleHistory = exampleHistory.concat([obj]);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcurrentlyFetching: false,\n\t\t\t\t\t\texampleHistory: newExampleHistory,\n\t\t\t\t\t\tcurrentExampleHistoryIndex: newExampleHistory.length - 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfetchNextExample() {\n\t\treturn fetch(\"http://localhost:8080/next\").then(function(response) {\n\t\t\treturn response.json();\n\t\t});\n\t}\n\n\tsaveAnnotations(example) {\n\t\tconsole.log(example);\n\t\tthis.showToast(\"Annotations Saved\", \"success\", 3000);\n\t}\n\n\tfetchAvalableEntities() {\n\t\tfetch(\"http://localhost:8080/avalable_ents\")\n\t\t\t.then(function(response) {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((myJson) => {\n\t\t\t\tlet array = myJson;\n\t\t\t\tconsole.log(array);\n\t\t\t\tthis.setState({ avalableEntities: array });\n\t\t\t});\n\t}\n\n\tupdateSpans(newSpans) {\n\t\tconst exampleHistory = this.state.exampleHistory;\n\t\tconst exampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tconst currentExample = exampleHistory[exampleHistoryIndex];\n\n\t\tcurrentExample.undoHistory = currentExample.undoHistory.concat([\n\t\t\t{\n\t\t\t\tspans: newSpans\n\t\t\t}\n\t\t]);\n\n\t\tthis.setState({ exampleHistory: exampleHistory });\n\t}\n\n\trender() {\n\t\tconst exampleHistory = this.state.exampleHistory;\n\t\tconst exampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tconst currentExample = exampleHistory[exampleHistoryIndex];\n\n\t\tlet loadingElm = null;\n\t\tif (this.state.currentlyFetching) loadingElm = <progress id=\"Fetching_Indicator\"></progress>;\n\n\t\tif (currentExample !== undefined) {\n\t\t\tconst undoHistory = currentExample.undoHistory;\n\t\t\tconst currentUndo = undoHistory[undoHistory.length - 1];\n\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t{loadingElm}\n\t\t\t\t\t<NERAnnotator\n\t\t\t\t\t\ttext={currentExample.text}\n\t\t\t\t\t\tspans={currentUndo.spans}\n\t\t\t\t\t\tavalableEntities={this.state.avalableEntities}\n\t\t\t\t\t\tupdateSpans={this.updateSpans.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Toast\n\t\t\t\t\t\tlevel={(this.state.visibleToastObj || {})[\"level\"] || \"\"}\n\t\t\t\t\t\tmessage={(this.state.visibleToastObj || {})[\"message\"] || \"\"}\n\t\t\t\t\t\tvisible={this.state.visibleToastObj != null}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn \"Loading...\";\n\t\t}\n\t}\n\n\tshowToast(message, level, durration) {\n\t\tthis.setState({\n\t\t\tvisibleToastObj: {\n\t\t\t\tmessage: message,\n\t\t\t\tlevel: level\n\t\t\t}\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ visibleToastObj: null });\n\t\t}, durration);\n\t}\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}