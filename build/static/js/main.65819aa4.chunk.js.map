{"version":3,"sources":["NER_Visualizer.jsx","NER_Annotator.jsx","index.js"],"names":["NERVisualizer","this","generateHTML","props","text","spans","_this","output","offset","_loop","spanIndex","_spans$spanIndex","label","start","end","toUpperCase","entity","slice","fragments","split","forEach","fragment","i","push","length","react_default","a","createElement","color","intToHSL","hashCode","cancelSpanClick","data-entity","style","background","onClick","e","cycleSpanLabel","deleteSpan","str","hash","charCodeAt","React","Component","NERAnnotator","undoHistory","state","current","console","log","id","onMouseUp","handleMouseUp","NER_Visualizer","ents","bind","splice","updateSpans","indexOf","setState","concat","document","addEventListener","handleKeyPress","removeEventListener","event","selection","getSelectionRange","_this$findSpansOverla","findSpansOverlapingSelection","span","windowSelection","window","getSelection","rangeCount","startRange","getRangeAt","endRange","charcounter","getElementById","childNodes","element","startContainer","parentNode","startOffset","endContainer","nodeName","nodeType","hasAttribute","textContent","endOffset","removeAllRanges","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentlyFetching","avalableEntities","currentExampleHistoryIndex","exampleHistory","fetchAvalableEntities","showNextExample","_this2","fetchNextExample","then","obj","newExampleHistory","fetch","response","json","_this3","myJson","array","currentExample","loadingElm","undefined","currentUndo","className","NER_Annotator","rootElement","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.65819aa4.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./NER_Annotate_Styles.css\";\n\nclass NERVisualizer extends React.Component {\n\trender() {\n\t\treturn this.generateHTML(this.props.text, this.props.spans);\n\t}\n\n\tgenerateHTML(text, spans) {\n\t\tlet output = [];\n\t\tlet offset = 0;\n\n\t\tfor (let spanIndex = 0; spanIndex < spans.length; spanIndex++) {\n\t\t\tlet { label, start, end } = spans[spanIndex];\n\t\t\tlabel = label.toUpperCase();\n\t\t\tconst entity = text.slice(start, end);\n\t\t\tconst fragments = text.slice(offset, start).split(\"\\n\");\n\t\t\tfragments.forEach((fragment, i) => {\n\t\t\t\toutput.push(fragment);\n\t\t\t\tif (fragments.length > 1 && i !== fragments.length - 1) output.push(<br />);\n\t\t\t});\n\t\t\tlet color = this.intToHSL(this.hashCode(label));\n\t\t\tlet cancelSpanClick = false;\n\t\t\toutput.push(\n\t\t\t\t<span\n\t\t\t\t\tdata-entity={label}\n\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tif (cancelSpanClick) {\n\t\t\t\t\t\t\tcancelSpanClick = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.props.cycleSpanLabel(spanIndex);\n\t\t\t\t\t}}>\n\t\t\t\t\t{entity}\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tcancelSpanClick = true;\n\t\t\t\t\t\t\t// e.preventDefault();\n\t\t\t\t\t\t\t// e.nativeEvent.stopImmediatePropagation();\n\t\t\t\t\t\t\tthis.props.deleteSpan(spanIndex);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tx\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t);\n\t\t\toffset = end;\n\t\t}\n\t\tconst fragments = text.slice(offset, text.length).split(\"\\n\");\n\t\tfragments.forEach((fragment, i) => {\n\t\t\toutput.push(fragment);\n\t\t\tif (fragments.length > 1 && i !== fragments.length - 1) output.push(<br />);\n\t\t});\n\t\treturn output;\n\t}\n\n\thashCode(str) {\n\t\t// java String#hashCode\n\t\tvar hash = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash);\n\t\t}\n\t\treturn hash - 100 * str.length;\n\t}\n\n\tintToHSL(i) {\n\t\treturn \"hsla(\" + ((i - 400) % 360) + \", 90%, 65%, 1)\";\n\t}\n}\n\nexport default NERVisualizer;\n","import React from \"react\";\nimport NERVisualizer from \"./NER_Visualizer\";\n\nclass NERAnnotator extends React.Component {\n\trender() {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tconsole.log(undoHistory);\n\t\treturn (\n\t\t\t<figure\n\t\t\t\tid=\"displacy_container\"\n\t\t\t\tonMouseUp={(e) => {\n\t\t\t\t\tthis.handleMouseUp(e);\n\t\t\t\t}}>\n\t\t\t\t<NERVisualizer\n\t\t\t\t\ttext={this.state.text}\n\t\t\t\t\tents={this.state.ents}\n\t\t\t\t\tspans={current.spans}\n\t\t\t\t\tdeleteSpan={this.deleteSpan.bind(this)}\n\t\t\t\t\tcycleSpanLabel={this.cycleSpanLabel.bind(this)}\n\t\t\t\t/>\n\t\t\t</figure>\n\t\t);\n\t}\n\n\t// undo() {\n\t// \tconsole.log(\"undoing\");\n\t// \tif (this.state.undoHistory.length <= 1) return false;\n\t// \t// console.log(\"pre\", this.state.undoHistory);\n\t// \t// console.log(\"post\", this.state.undoHistory.slice(0, this.state.undoHistory.length - 1));\n\t// \tthis.setState({\n\t// \t\tundoHistory: this.state.undoHistory.slice(0, this.state.undoHistory.length - 1)\n\t// \t});\n\t// }\n\n\tdeleteSpan(spanIndex) {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tconst spans = current.spans.slice();\n\t\tspans.splice(spanIndex, 1);\n\t\tthis.props.updateSpans(spans);\n\t}\n\n\tcycleSpanLabel(spanIndex) {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tconst spans = current.spans.slice();\n\t\tspans[spanIndex] = {\n\t\t\tstart: spans[spanIndex].start,\n\t\t\tend: spans[spanIndex].end,\n\t\t\tlabel: this.state.ents[(this.state.ents.indexOf(spans[spanIndex].label) + 1) % this.state.ents.length]\n\t\t};\n\t\tthis.setState({\n\t\t\tundoHistory: undoHistory.concat([\n\t\t\t\t{\n\t\t\t\t\tspans: spans\n\t\t\t\t}\n\t\t\t])\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress.bind(this), false);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyPress.bind(this), false);\n\t}\n\n\thandleKeyPress(event) {\n\t\tconsole.log(event);\n\t\t// if (event.key === \"z\" && (event.ctrlKey === true || event.metaKey === true)) this.undo();\n\t}\n\n\thandleMouseUp(e) {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tvar spans = current.spans.slice();\n\t\tvar selection = this.getSelectionRange();\n\n\t\tif (selection.start === selection.end) return false;\n\n\t\tvar { spans, selection } = this.findSpansOverlapingSelection(spans, selection);\n\t\tconsole.log(\"selection: \" + this.state.text.slice(selection.start, selection.end), selection);\n\n\t\tselection[\"label\"] = this.state.ents[0];\n\t\tconsole.log(spans, selection);\n\n\t\tlet spanIndex = 0;\n\t\twhile (spans[spanIndex] && spans[spanIndex].end < selection.start) spanIndex++;\n\t\tif (spanIndex >= spans.length) spans.push(selection);\n\t\telse spans.splice(spanIndex, 0, selection);\n\n\t\tthis.setState({\n\t\t\tundoHistory: undoHistory.concat([\n\t\t\t\t{\n\t\t\t\t\tspans: spans\n\t\t\t\t}\n\t\t\t])\n\t\t});\n\t}\n\n\tfindSpansOverlapingSelection(spans, selection) {\n\t\tfor (let spanIndex = 0; spanIndex < spans.length; spanIndex++) {\n\t\t\tlet span = spans[spanIndex];\n\t\t\tif (\n\t\t\t\tselection.start <= span.end &&\n\t\t\t\tspan.end <= selection.end &&\n\t\t\t\t(selection.start <= span.start && span.start <= selection.end)\n\t\t\t) {\n\t\t\t\tconsole.log(\"splicing\", spans[spanIndex]);\n\t\t\t\tspans.splice(spanIndex, 1);\n\t\t\t\tspanIndex--;\n\t\t\t} else if (selection.start <= span.start && span.start <= selection.end) {\n\t\t\t\tconsole.log(\"trimming end to: \" + (span.end + 1), spans[spanIndex]);\n\t\t\t\tselection.end = span.start;\n\t\t\t} else if (selection.start <= span.end && span.end <= selection.end) {\n\t\t\t\tconsole.log(\"trimming start to: \" + (span.end + 1), spans[spanIndex]);\n\t\t\t\tselection.start = span.end;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"not splicing\", spans[spanIndex]);\n\t\t\t}\n\t\t}\n\t\treturn { spans: spans, selection: selection };\n\t}\n\n\tgetSelectionRange() {\n\t\tlet windowSelection = window.getSelection();\n\t\tif (windowSelection.rangeCount === 0) return { start: 0, end: 0 };\n\t\tlet startRange = windowSelection.getRangeAt(0);\n\t\tconsole.log(startRange);\n\t\tlet endRange = windowSelection.getRangeAt(windowSelection.rangeCount - 1);\n\t\tconsole.log(endRange);\n\t\tlet start = 0;\n\t\tlet end = 0;\n\t\tlet charcounter = 0;\n\n\t\tdocument.getElementById(\"displacy_container\").childNodes.forEach((element) => {\n\t\t\t// console.dir(element);\n\t\t\tif (element === startRange.startContainer || element === startRange.startContainer.parentNode) {\n\t\t\t\tstart = charcounter + startRange.startOffset;\n\t\t\t}\n\t\t\tif (element === endRange.endContainer || element === endRange.endContainer.parentNode) {\n\t\t\t\tend = charcounter + endRange.endOffset;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (element.nodeName === \"BR\") {\n\t\t\t\tcharcounter += 1;\n\t\t\t\tconsole.log(\"here\");\n\t\t\t} else if (element.nodeType === 1 && element.hasAttribute(\"data-entity\")) {\n\t\t\t\tcharcounter -= 1;\n\t\t\t}\n\t\t\tcharcounter += element.textContent.length;\n\t\t});\n\t\twindowSelection.removeAllRanges();\n\t\treturn { start: start, end: end };\n\t}\n}\n\nexport default NERAnnotator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport NERAnnotator from \"./NER_Annotator\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Don't call this.setState() here!\n\t\tthis.state = {\n\t\t\tcurrentlyFetching: false,\n\t\t\tavalableEntities: [],\n\t\t\tcurrentExampleHistoryIndex: 0,\n\t\t\texampleHistory: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchAvalableEntities();\n\t\tthis.showNextExample();\n\t}\n\n\tshowNextExample() {\n\t\tif (this.state.currentlyFetching === true) return;\n\t\tconst exampleHistory = this.state.exampleHistory;\n\t\tconst currentExampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tif (currentExampleHistoryIndex < exampleHistory.length - 1) {\n\t\t\tthis.setState({ currentExampleHistoryIndex: currentExampleHistoryIndex + 1 });\n\t\t} else {\n\t\t\tthis.setState({ currentlyFetching: true });\n\t\t\tthis.fetchNextExample().then((obj) => {\n\t\t\t\tconsole.log(obj);\n\t\t\t\tobj.undoHistory = [{ spans: obj.ents }];\n\t\t\t\tdelete obj.ents;\n\t\t\t\tconst newExampleHistory = exampleHistory.concat([obj]);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentlyFetching: false,\n\t\t\t\t\texampleHistory: newExampleHistory,\n\t\t\t\t\tcurrentExampleHistoryIndex: newExampleHistory.length - 1\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tshowPrevExample() {\n\t\tconst currentExampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tif (currentExampleHistoryIndex > 0) this.setState({ currentExampleHistoryIndex: currentExampleHistoryIndex - 1 });\n\t}\n\n\tfetchNextExample() {\n\t\treturn fetch(\"/next\").then(function(response) {\n\t\t\treturn response.json();\n\t\t});\n\t}\n\n\tsaveSpans() {}\n\n\tfetchAvalableEntities() {\n\t\tfetch(\"/avalable_ents\")\n\t\t\t.then(function(response) {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((myJson) => {\n\t\t\t\tlet array = myJson;\n\t\t\t\tconsole.log(array);\n\t\t\t\tthis.setState({ avalableEntities: array });\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst exampleHistory = this.state.exampleHistory;\n\t\tconst exampleHistoryIndex = this.state.currentExampleHistoryIndex;\n\t\tconst currentExample = exampleHistory[exampleHistoryIndex];\n\n\t\tlet loadingElm = null;\n\t\tif (this.state.currentlyFetching) loadingElm = <progress></progress>;\n\n\t\tif (currentExample !== undefined) {\n\t\t\tconst undoHistory = currentExample.undoHistory;\n\t\t\tconst currentUndo = undoHistory[undoHistory.length - 1];\n\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t{loadingElm}\n\t\t\t\t\t<NERAnnotator\n\t\t\t\t\t\ttext={currentExample.text}\n\t\t\t\t\t\tspans={currentUndo.spans}\n\t\t\t\t\t\tavalableEntities={this.state.avalableEntities}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn \"Loading...\";\n\t\t}\n\t}\n}\n\n//     parse(text = this.defaultText, model = this.defaultModel, ents = this.defaultEnts) {\n//         if(labelof this.onStart === 'function') this.onStart();\n\n//         let xhr = new XMLHttpRequest();\n//         xhr.open('POST', this.api, true);\n//         xhr.setRequestHeader('Content-label', 'text/plain');\n//         xhr.onreadystatechange = () => {\n//             if(xhr.readyState === 4 && xhr.status === 200) {\n//                 if(labelof this.onSuccess === 'function') this.onSuccess();\n//\n//             }\n\n//             else if(xhr.status !== 200) {\n//                 if(labelof this.onError === 'function') this.onError(xhr.statusText);\n//             }\n//         }\n\n//         xhr.onerror = () => {\n//             xhr.abort();\n//             if(labelof this.onError === 'function') this.onError();\n//         }\n\n//         xhr.send(JSON.stringify({ text, model }));\n//     }\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}