{"version":3,"sources":["NER_Visualizer.jsx","NER_Annotator.jsx","index.js"],"names":["NERVisualizer","this","generateHTML","props","text","spans","_this","output","offset","_loop","spanIndex","_spans$spanIndex","label","start","end","toUpperCase","entity","slice","fragments","split","forEach","fragment","i","push","length","react_default","a","createElement","color","intToHSL","hashCode","cancelSpanClick","data-entity","style","background","onClick","e","cycleSpanLabel","deleteSpan","str","hash","charCodeAt","React","Component","NERAnnotator","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","ents","avalableEnts","lastEnt","undoHistory","spansObj","nextProps","setState","_this2","current","console","log","id","onMouseUp","handleMouseUp","NER_Visualizer","bind","splice","concat","indexOf","document","addEventListener","handleKeyPress","removeEventListener","event","key","ctrlKey","metaKey","undo","selection","getSelectionRange","_this$findSpansOverla","findSpansOverlapingSelection","span","windowSelection","window","getSelection","rangeCount","startRange","getRangeAt","endRange","charcounter","getElementById","childNodes","element","startContainer","parentNode","startOffset","endContainer","nodeName","nodeType","hasAttribute","textContent","endOffset","removeAllRanges","App","databaseId","getNext","fetch","then","response","json","myJson","obj","database_id","className","NER_Annotator","rootElement","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.22171cf8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./NER_Annotate_Styles.css\";\n\nclass NERVisualizer extends React.Component {\n\trender() {\n\t\treturn this.generateHTML(this.props.text, this.props.spans);\n\t}\n\n\tgenerateHTML(text, spans) {\n\t\tlet output = [];\n\t\tlet offset = 0;\n\n\t\tfor (let spanIndex = 0; spanIndex < spans.length; spanIndex++) {\n\t\t\tlet { label, start, end } = spans[spanIndex];\n\t\t\tlabel = label.toUpperCase();\n\t\t\tconst entity = text.slice(start, end);\n\t\t\tconst fragments = text.slice(offset, start).split(\"\\n\");\n\t\t\tfragments.forEach((fragment, i) => {\n\t\t\t\toutput.push(fragment);\n\t\t\t\tif (fragments.length > 1 && i !== fragments.length - 1) output.push(<br />);\n\t\t\t});\n\t\t\tlet color = this.intToHSL(this.hashCode(label));\n\t\t\tlet cancelSpanClick = false;\n\t\t\toutput.push(\n\t\t\t\t<span\n\t\t\t\t\tdata-entity={label}\n\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tif (cancelSpanClick) {\n\t\t\t\t\t\t\tcancelSpanClick = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.props.cycleSpanLabel(spanIndex);\n\t\t\t\t\t}}>\n\t\t\t\t\t{entity}\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tcancelSpanClick = true;\n\t\t\t\t\t\t\t// e.preventDefault();\n\t\t\t\t\t\t\t// e.nativeEvent.stopImmediatePropagation();\n\t\t\t\t\t\t\tthis.props.deleteSpan(spanIndex);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tx\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t);\n\t\t\toffset = end;\n\t\t}\n\t\tconst fragments = text.slice(offset, text.length).split(\"\\n\");\n\t\tfragments.forEach((fragment, i) => {\n\t\t\toutput.push(fragment);\n\t\t\tif (fragments.length > 1 && i !== fragments.length - 1) output.push(<br />);\n\t\t});\n\t\treturn output;\n\t}\n\n\thashCode(str) {\n\t\t// java String#hashCode\n\t\tvar hash = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash);\n\t\t}\n\t\treturn hash - 100 * str.length;\n\t}\n\n\tintToHSL(i) {\n\t\treturn \"hsla(\" + ((i - 400) % 360) + \", 90%, 65%, 1)\";\n\t}\n}\n\nexport default NERVisualizer;\n","import React from \"react\";\nimport NERVisualizer from \"./NER_Visualizer\";\n\nclass NERAnnotator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// // Don't call this.setState() here!\n\t\tthis.state = {\n\t\t\ttext: props.text || \"No Text Given\",\n\t\t\tents: props.avalableEnts || [\n\t\t\t\t\"PRODUCT\",\n\t\t\t\t\"ORG\",\n\t\t\t\t\"GPE\",\n\t\t\t\t\"LOC\",\n\t\t\t\t\"MONEY\",\n\t\t\t\t\"TIME\",\n\t\t\t\t\"PERCENT\",\n\t\t\t\t\"DATE\",\n\t\t\t\t\"QUANTITY\",\n\t\t\t\t\"ORDINAL\",\n\t\t\t\t\"CARDINAL\",\n\t\t\t\t\"PERSON\",\n\t\t\t\t\"NORP\",\n\t\t\t\t\"FAC\"\n\t\t\t],\n\t\t\tlastEnt: null,\n\t\t\tundoHistory: [\n\t\t\t\t{\n\t\t\t\t\tspans: props.spansObj || []\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\t// console.log(\"componentWillReceiveProps\");\n\t\tthis.setState({\n\t\t\ttext: nextProps.text || \"No Text Given\",\n\t\t\tents: nextProps.ents || this.state.ents,\n\t\t\tundoHistory: [\n\t\t\t\t{\n\t\t\t\t\tspans: nextProps.spansObj || []\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trender() {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tconsole.log(undoHistory);\n\t\treturn (\n\t\t\t<figure\n\t\t\t\tid=\"displacy_container\"\n\t\t\t\tonMouseUp={(e) => {\n\t\t\t\t\tthis.handleMouseUp(e);\n\t\t\t\t}}>\n\t\t\t\t<NERVisualizer\n\t\t\t\t\ttext={this.state.text}\n\t\t\t\t\tents={this.state.ents}\n\t\t\t\t\tspans={current.spans}\n\t\t\t\t\tdeleteSpan={this.deleteSpan.bind(this)}\n\t\t\t\t\tcycleSpanLabel={this.cycleSpanLabel.bind(this)}\n\t\t\t\t/>\n\t\t\t</figure>\n\t\t);\n\t}\n\n\tundo() {\n\t\tconsole.log(\"undoing\");\n\t\tif (this.state.undoHistory.length <= 1) return false;\n\t\t// console.log(\"pre\", this.state.undoHistory);\n\t\t// console.log(\"post\", this.state.undoHistory.slice(0, this.state.undoHistory.length - 1));\n\t\tthis.setState({\n\t\t\tundoHistory: this.state.undoHistory.slice(0, this.state.undoHistory.length - 1)\n\t\t});\n\t}\n\n\tdeleteSpan(spanIndex) {\n\t\t// console.log(\"sel\", spanIndex);\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tconst spans = current.spans.slice();\n\t\t// console.log(spans);\n\t\tspans.splice(spanIndex, 1);\n\t\t// console.log(spans);\n\t\tthis.setState({\n\t\t\tundoHistory: undoHistory.concat([\n\t\t\t\t{\n\t\t\t\t\tspans: spans\n\t\t\t\t}\n\t\t\t])\n\t\t});\n\t}\n\n\tcycleSpanLabel(spanIndex) {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tconst spans = current.spans.slice();\n\t\tspans[spanIndex] = {\n\t\t\tstart: spans[spanIndex].start,\n\t\t\tend: spans[spanIndex].end,\n\t\t\tlabel: this.state.ents[(this.state.ents.indexOf(spans[spanIndex].label) + 1) % this.state.ents.length]\n\t\t};\n\t\tthis.setState({\n\t\t\tundoHistory: undoHistory.concat([\n\t\t\t\t{\n\t\t\t\t\tspans: spans\n\t\t\t\t}\n\t\t\t])\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress.bind(this), false);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyPress.bind(this), false);\n\t}\n\n\thandleKeyPress(event) {\n\t\tconsole.log(event);\n\t\tif (event.key === \"z\" && (event.ctrlKey === true || event.metaKey === true)) this.undo();\n\t}\n\n\thandleMouseUp(e) {\n\t\tconst undoHistory = this.state.undoHistory;\n\t\tconst current = undoHistory[undoHistory.length - 1];\n\t\tvar spans = current.spans.slice();\n\t\tvar selection = this.getSelectionRange();\n\n\t\tif (selection.start === selection.end) return false;\n\n\t\tvar { spans, selection } = this.findSpansOverlapingSelection(spans, selection);\n\t\tconsole.log(\"selection: \" + this.state.text.slice(selection.start, selection.end), selection);\n\n\t\tselection[\"label\"] = this.state.ents[0];\n\t\tconsole.log(spans, selection);\n\n\t\tlet spanIndex = 0;\n\t\twhile (spans[spanIndex] && spans[spanIndex].end < selection.start) spanIndex++;\n\t\tif (spanIndex >= spans.length) spans.push(selection);\n\t\telse spans.splice(spanIndex, 0, selection);\n\n\t\tthis.setState({\n\t\t\tundoHistory: undoHistory.concat([\n\t\t\t\t{\n\t\t\t\t\tspans: spans\n\t\t\t\t}\n\t\t\t])\n\t\t});\n\t}\n\n\tfindSpansOverlapingSelection(spans, selection) {\n\t\tfor (let spanIndex = 0; spanIndex < spans.length; spanIndex++) {\n\t\t\tlet span = spans[spanIndex];\n\t\t\tif (\n\t\t\t\tselection.start <= span.end &&\n\t\t\t\tspan.end <= selection.end &&\n\t\t\t\t(selection.start <= span.start && span.start <= selection.end)\n\t\t\t) {\n\t\t\t\tconsole.log(\"splicing\", spans[spanIndex]);\n\t\t\t\tspans.splice(spanIndex, 1);\n\t\t\t\tspanIndex--;\n\t\t\t} else if (selection.start <= span.start && span.start <= selection.end) {\n\t\t\t\tconsole.log(\"trimming end to: \" + (span.end + 1), spans[spanIndex]);\n\t\t\t\tselection.end = span.start;\n\t\t\t} else if (selection.start <= span.end && span.end <= selection.end) {\n\t\t\t\tconsole.log(\"trimming start to: \" + (span.end + 1), spans[spanIndex]);\n\t\t\t\tselection.start = span.end;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"not splicing\", spans[spanIndex]);\n\t\t\t}\n\t\t}\n\t\treturn { spans: spans, selection: selection };\n\t}\n\n\tgetSelectionRange() {\n\t\tlet windowSelection = window.getSelection();\n\t\tif (windowSelection.rangeCount === 0) return { start: 0, end: 0 };\n\t\tlet startRange = windowSelection.getRangeAt(0);\n\t\tconsole.log(startRange);\n\t\tlet endRange = windowSelection.getRangeAt(windowSelection.rangeCount - 1);\n\t\tconsole.log(endRange);\n\t\tlet start = 0;\n\t\tlet end = 0;\n\t\tlet charcounter = 0;\n\n\t\tdocument.getElementById(\"displacy_container\").childNodes.forEach((element) => {\n\t\t\t// console.dir(element);\n\t\t\tif (element === startRange.startContainer || element === startRange.startContainer.parentNode) {\n\t\t\t\tstart = charcounter + startRange.startOffset;\n\t\t\t}\n\t\t\tif (element === endRange.endContainer || element === endRange.endContainer.parentNode) {\n\t\t\t\tend = charcounter + endRange.endOffset;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (element.nodeName === \"BR\") {\n\t\t\t\tcharcounter += 1;\n\t\t\t\tconsole.log(\"here\");\n\t\t\t} else if (element.nodeType === 1 && element.hasAttribute(\"data-entity\")) {\n\t\t\t\tcharcounter -= 1;\n\t\t\t}\n\t\t\tcharcounter += element.textContent.length;\n\t\t});\n\t\twindowSelection.removeAllRanges();\n\t\treturn { start: start, end: end };\n\t}\n}\n\nexport default NERAnnotator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport NERAnnotator from \"./NER_Annotator\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// // Don't call this.setState() here!\n\t\tthis.state = { text: \"Loading...\", spans: [], databaseId: null };\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getNext();\n\t}\n\n\tgetNext() {\n\t\tfetch(\"http://127.0.0.1:8080/next\")\n\t\t\t.then(function(response) {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((myJson) => {\n\t\t\t\tlet obj = myJson;\n\t\t\t\tconsole.log(obj);\n\t\t\t\tthis.setState({ text: obj.text || \"error\", spans: obj.ents || [], databaseId: obj.database_id || \"\" });\n\t\t\t\t// this.forceUpdate();\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* {JSON.stringify(this.state)} */}\n\t\t\t\t{/* <h1>Hello CodeSandbox</h1> */}\n\t\t\t\t<NERAnnotator text={this.state.text} spansObj={this.state.spans} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n//     parse(text = this.defaultText, model = this.defaultModel, ents = this.defaultEnts) {\n//         if(labelof this.onStart === 'function') this.onStart();\n\n//         let xhr = new XMLHttpRequest();\n//         xhr.open('POST', this.api, true);\n//         xhr.setRequestHeader('Content-label', 'text/plain');\n//         xhr.onreadystatechange = () => {\n//             if(xhr.readyState === 4 && xhr.status === 200) {\n//                 if(labelof this.onSuccess === 'function') this.onSuccess();\n//\n//             }\n\n//             else if(xhr.status !== 200) {\n//                 if(labelof this.onError === 'function') this.onError(xhr.statusText);\n//             }\n//         }\n\n//         xhr.onerror = () => {\n//             xhr.abort();\n//             if(labelof this.onError === 'function') this.onError();\n//         }\n\n//         xhr.send(JSON.stringify({ text, model }));\n//     }\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}